
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	temporizador.asm
	Object File:	temporizador.hex
	List File:	temporizador.lst



 Line  I  Addr  Code            Source

    1:				; Temporizador de rele
    2:				; Programador: Francisco Edno
    3:				;
    4:				; No projeto o usuário poderar definir um tempo em minutos e segundos para
    5:				; acionamento de uma carga (rele). A interface com usuario e por meio de
    6:				; displays de 7 segmentos e 5 botoes (4 para configurar o tempo de acionamento
    7:				; e 1 para iniciar a temporizacao).
    8:
    9:				; *****************************************************************************
   10:				; INTERRUPCOES
   11:				; *****************************************************************************
   12:		N      0000	org     0000h
   13:	  0000	02 00 1E	ljmp    _main
   14:
   15:		N      000B	org     000Bh
   16:	  000B	02 00 2F	ljmp    _tmr0
   17:
   18:		N      001B	org     001Bh
   19:	  001B	02 00 43	ljmp    _tmr1
   20:
   21:				; *****************************************************************************
   22:				; EQUATES
   23:				; *****************************************************************************
   24:		D      00A0	DISP    equ     p2      ; porta do display
   25:		B      00B4	D1      equ     p3.4    ; habilita display 1
   26:		B      00B5	D2      equ     p3.5    ; habilita display 2
   27:		B      00B6	D3      equ     p3.6    ; habilita display 3
   28:		B      00B7	D4      equ     p3.7    ; habilita display 4
   29:		N      EC78	TMR     equ     -5000   ; frequencia de multiplexacao = 200Hz
   30:		N      3CB0	TMR1    equ     -50000  ; Prepara para contagem de 50000us (0.05s)
   31:
   32:		N	 00	F1      bit     00h
   33:		N	 01	F2      bit     01h
   34:
   35:				; *****************************************************************************
   36:				; Main
   37:				; *****************************************************************************
   38:	  001E	7B 01		_main:      mov     r3, #01       ; registrador que indica os minutos
   39:	  0020	7C 21		            mov     r4, #33       ; registrador que indica os segundos
   40:
   41:	  0022	75 81 2F	            mov     sp, #2fh      ; muda o stack pointer
   42:
   43:	  0025	11 4C		            acall   ConfTMR       ; configura os timers 0 e 1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:
   45:	  0027	D2 AF		            setb    ea            ; habilita interrupcoes
   46:	  0029	D2 A9		            setb    et0           ; habilita interrupcao do timer 0
   47:	  002B	D2 AB		            setb    et1           ; habilita interrupcao do timer 1
   48:
   49:	  002D	80 FE		            sjmp    $             ; aguarda as interrupcoes
   50:
   51:				; *****************************************************************************
   52:				; ISR
   53:				; *****************************************************************************
   54:
   55:				; -----------------------------------------------------------------------------
   56:				; Timer 0
   57:				; -----------------------------------------------------------------------------
   58:				; Multiplexacao dos displays.
   59:				; -----------------------------------------------------------------------------
   60:	  002F	B2 01		_tmr0:      cpl     F2
   61:
   62:	  0031	20 01 04	            jb      F2, _min        ; F2 == 1?
   63:	  0034	11 7F		            acall   MuxSec          ; nao: multiplexa os segundos
   64:	  0036	01 3A		            ajmp    _exit2          ; sai da ISR
   65:
   66:	  0038	11 66		_min:       acall   MuxMin          ; multiplexa os minutos
   67:
   68:	  003A	C2 8D		_exit2:     clr     tf0             ; limpa a flag de overflow
   69:	  003C	75 8A 78	            mov     tl0, #low TMR   ; recarrega o timer com o byte baixo
   70:	  003F	75 8C EC	            mov     th0, #high TMR  ; recarrega o timer com o byte superior
   71:
   72:	  0042	32		            reti                    ; retorna da ISR
   73:
   74:				; -----------------------------------------------------------------------------
   75:				; Timer 1
   76:				; -----------------------------------------------------------------------------
   77:				; Contador de segundos.
   78:				; -----------------------------------------------------------------------------
   79:	  0043	C2 8F		_tmr1:      clr     tf1
   80:	  0045	75 8B B0	            mov     tl1, #low TMR1
   81:	  0048	75 8D 3C	            mov     th1, #high TMR1
   82:
   83:	  004B	32		            reti
   84:
   85:				; *****************************************************************************
   86:				; SUB-ROTINAS
   87:				; *****************************************************************************
   88:
   89:				; -----------------------------------------------------------------------------
   90:				; ConfTMR
   91:				; -----------------------------------------------------------------------------
   92:				; Configura os Timers 0 e 1
   93:				; - Usa: ConfigT0
   94:				;        ConfigT1
   95:				; -----------------------------------------------------------------------------
   96:	  004C			ConfTMR:
   97:	  004C	75 89 01	            mov     tmod, #01h  ; timer 0 e 1 no modo 1
   98:	  004F	11 54		            acall   ConfigT0    ; configura timer 0
   99:	  0051	11 5D		            acall   ConfigT1    ; configura timer 1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:
  101:	  0053	22		            ret
  102:				; -----------------------------------------------------------------------------
  103:				; ConfigT0
  104:				; -----------------------------------------------------------------------------
  105:				; Configura o timer 0
  106:				; -----------------------------------------------------------------------------
  107:	  0054	D2 8C		ConfigT0:   setb    tr0           ; liga o timer 0
  108:	  0056	75 8A 78	            mov     tl0, #low TMR ; recarga do byte menor
  109:	  0059	75 8C EC	            mov     th0, #high TMR; recarga do byte maior
  110:
  111:	  005C	22		            ret
  112:
  113:				; -----------------------------------------------------------------------------
  114:				; ConfigT1
  115:				; -----------------------------------------------------------------------------
  116:				; Configura o timer 1
  117:				; -----------------------------------------------------------------------------
  118:	  005D	D2 8E		ConfigT1:   setb    tr1             ; liga o timer 1
  119:	  005F	75 8B B0	            mov     tl1, #low TMR1  ; recarga do byte menor
  120:	  0062	75 8D 3C	            mov     th1, #high TMR1 ; recarga do byte maior
  121:
  122:	  0065	22		            ret
  123:
  124:				; -----------------------------------------------------------------------------
  125:				; MuxMin
  126:				; -----------------------------------------------------------------------------
  127:				; Multiplexa dois displays (D1 e D2), imprimindo o valor do R3 (Minutos).
  128:				; - Registradores: R3
  129:				; - Usa: Display
  130:				; -----------------------------------------------------------------------------
  131:	  0066	B2 D5		MuxMin:     cpl     f0          ; complementa flag de controle
  132:	  0068	11 AC		            acall   Disable
  133:
  134:	  006A	EB		            mov     a, r3       ; a <- r3
  135:	  006B	75 F0 0A	            mov     b, #10      ; prepara para separar unidade e dezena
  136:	  006E	84		            div     ab          ; a <- dezenas | b <- unidade
  137:
  138:	  006F	20 D5 08	            jb      f0, _disp1  ; f0 == 1?
  139:	  0072	C2 B5		            clr     D2          ; nao: Habilita d2
  140:	  0074	E5 F0		            mov     a, b        ; acc <- b para botar no display
  141:	  0076	11 A7		            acall   Display     ; imprime o valor do acc
  142:	  0078	01 7E		            ajmp    _exit       ; sai da rotina
  143:
  144:	  007A	C2 B4		_disp1:     clr     D1          ; habilita d1
  145:	  007C	11 A7		            acall   Display     ; imprime o valor do acc
  146:
  147:	  007E	22		_exit:      ret
  148:
  149:				; -----------------------------------------------------------------------------
  150:				; MuxSec
  151:				; -----------------------------------------------------------------------------
  152:				; Multiplexa dois displays (D3 e D4), impimindo o valor do R4 (segundos).
  153:				; - Registradores: R4
  154:				; - Usa: Display
  155:				; -----------------------------------------------------------------------------

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:	  007F	B2 00		MuxSec:     cpl     F1          ; complementa flag de controle
  157:	  0081	11 AC		            acall   Disable
  158:
  159:	  0083	EC		            mov     a, r4       ; a <- r4
  160:	  0084	75 F0 0A	            mov     b, #10      ; prepara para separar unidade e dezena
  161:	  0087	84		            div     ab          ; a <- dezena | b <- unidade
  162:
  163:	  0088	20 00 08	            jb      F1, _disp3  ; F1 == 1?
  164:	  008B	C2 B7		            clr     D4          ; nao: habilita d4
  165:	  008D	E5 F0		            mov     a, b        ; acc <- b para botar no display
  166:	  008F	11 A7		            acall   Display     ; imprime o valor do acc
  167:	  0091	01 97		            ajmp    _exit1      ; sai da rotina
  168:
  169:	  0093	C2 B6		_disp3:     clr     D3          ; habilita d3
  170:	  0095	11 A7		            acall   Display     ; imprime o valor do acc
  171:
  172:	  0097	22		_exit1:     ret
  173:
  174:				; -----------------------------------------------------------------------------
  175:				; LKDisp
  176:				; -----------------------------------------------------------------------------
  177:				; Decodifica o digito do ACC para o display de 7 segmentos. Retorna com
  178:				; o valor no ACC.
  179:				; -----------------------------------------------------------------------------
  180:	  0098	90 00 9D	LKDisp:     mov     dptr, #TABELA
  181:	  009B	93		            movc    a, @a+dptr
  182:	  009C	22		            ret
  183:
  184:	  009D	C0 F9 A4 B0	TABELA: db  0C0h,0F9h,0A4h,0B0h,99h,92h,82h,0F8h,80h,90h
	  00A1	99 92 82 F8
	  00A5	80 90
  185:
  186:				; -----------------------------------------------------------------------------
  187:				; Display
  188:				; -----------------------------------------------------------------------------
  189:				; Imprime num display o digito no acumulador.
  190:				; - Usa: LKDisp
  191:				; -----------------------------------------------------------------------------
  192:	  00A7	11 98		Display:    acall   LKDisp
  193:	  00A9	F5 A0		            mov     DISP, a
  194:	  00AB	22		            ret
  195:
  196:				; -----------------------------------------------------------------------------
  197:				; Disable
  198:				; -----------------------------------------------------------------------------
  199:				; Desabilita todos os displays
  200:				; -----------------------------------------------------------------------------
  201:	  00AC	D2 B4		Disable:    setb    D1
  202:	  00AE	D2 B5		            setb    D2
  203:	  00B0	D2 B6		            setb    D3
  204:	  00B2	D2 B7		            setb    D4
  205:
  206:	  00B4	22		            ret
  207:
  208:				; *****************************************************************************
  209:				            end

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  210:				; *****************************************************************************





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
CONFIGT0			  CODE	    0054	 107
CONFIGT1			  CODE	    005D	 118
CONFTMR				  CODE	    004C	  96
CY				  BIT	      D7
D1				  NUMBER    00B4	  25
D2				  NUMBER    00B5	  26
D3				  NUMBER    00B6	  27
D4				  NUMBER    00B7	  28
DISABLE				  CODE	    00AC	 201
DISP				  NUMBER    00A0	  24
DISPLAY				  CODE	    00A7	 192
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
F1				  BIT	      00	  32
F2				  BIT	      01	  33
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LKDISP				  CODE	    0098	 180
MUXMIN				  CODE	    0066	 131
MUXSEC				  CODE	    007F	 156
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TABELA				  CODE	    009D	 184
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TMR				  NUMBER    EC78	  29
TMR1				  NUMBER    3CB0	  30
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
_DISP1				  CODE	    007A	 144
_DISP3				  CODE	    0093	 169
_EXIT				  CODE	    007E	 147
_EXIT1				  CODE	    0097	 172
_EXIT2				  CODE	    003A	  68
_MAIN				  CODE	    001E	  38
_MIN				  CODE	    0038	  66
_TMR0				  CODE	    002F	  60
_TMR1				  CODE	    0043	  79
