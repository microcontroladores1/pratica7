
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	temporizador.asm
	Object File:	temporizador.hex
	List File:	temporizador.lst



 Line  I  Addr  Code            Source

    1:				; Temporizador de rele
    2:				; Programador: Francisco Edno
    3:				;
    4:				; No projeto o usuário poderar definir um tempo em minutos e segundos para
    5:				; acionamento de uma carga (rele). A interface com usuario e por meio de
    6:				; displays de 7 segmentos e 5 botoes (4 para configurar o tempo de acionamento
    7:				; e 1 para iniciar a temporizacao).
    8:
    9:				; *****************************************************************************
   10:				; INTERRUPCOES
   11:				; *****************************************************************************
   12:		N      0000	org     0000h
   13:	  0000	02 00 1E	ljmp    _main
   14:
   15:		N      000B	org     000Bh
   16:	  000B	02 00 33	ljmp    _tmr0
   17:
   18:		N      001B	org     001Bh
   19:	  001B	02 00 43	ljmp    _tmr1
   20:
   21:				; *****************************************************************************
   22:				; EQUATES
   23:				; *****************************************************************************
   24:		D      00A0	DISP    equ     p2      ; porta do display
   25:		B      0080	LOAD    equ     p0.0    ; pino onde vai ficar o acionamento da carga.
   26:
   27:		B      00B4	D1      equ     p3.4    ; habilita display 1
   28:		B      00B5	D2      equ     p3.5    ; habilita display 2
   29:		B      00B6	D3      equ     p3.6    ; habilita display 3
   30:		B      00B7	D4      equ     p3.7    ; habilita display 4
   31:
   32:
   33:		N      EC78	TMR     equ     -5000   ; frequencia de multiplexacao = 200Hz (correto = 5000)
   34:		N      3CB0	TMR1    equ     -50000  ; Prepara para contagem de 50000us (0.05s)
   35:
   36:		N	 00	F1      bit     00h     ; flag para mux de segundos
   37:		N	 01	F2      bit     01h     ; flag para mux de minutos
   38:
   39:				; *****************************************************************************
   40:				; Main
   41:				; *****************************************************************************
   42:	  001E	7B 00		_main:      mov     r3, #00       ; registrador que indica os minutos
   43:	  0020	7C 03		            mov     r4, #03       ; registrador que indica os segundos

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:
   45:	  0022	7D 00		            mov     r5, #00       ; valor de recarrega para segundos
   46:
   47:	  0024	11 B0		            acall   Disable       ; desabilita todos os displays
   48:
   49:	  0026	75 81 2F	            mov     sp, #2fh      ; muda o stack pointer
   50:
   51:	  0029	11 50		            acall   ConfTMR       ; configura os timers 0 e 1
   52:
   53:	  002B	D2 AF		            setb    ea            ; habilita interrupcoes
   54:	  002D	D2 A9		            setb    et0           ; habilita interrupcao do timer 0
   55:	  002F	D2 AB		            setb    et1           ; habilita interrupcao do timer 1
   56:
   57:	  0031	80 FE		            sjmp    $             ; aguarda as interrupcoes
   58:
   59:				; *****************************************************************************
   60:				; ISR
   61:				; *****************************************************************************
   62:
   63:				; -----------------------------------------------------------------------------
   64:				; Timer 0
   65:				; -----------------------------------------------------------------------------
   66:				; Multiplexacao dos displays.
   67:				; -----------------------------------------------------------------------------
   68:	  0033	B2 01		_tmr0:      cpl     F2
   69:
   70:	  0035	20 01 04	            jb      F2, _min        ; F2 == 1?
   71:	  0038	11 83		            acall   MuxSec          ; nao: multiplexa os segundos
   72:	  003A	01 3E		            ajmp    _exit2          ; sai da ISR
   73:
   74:	  003C	11 6A		_min:       acall   MuxMin          ; multiplexa os minutos
   75:
   76:	  003E	C2 8D		_exit2:     clr     tf0             ; limpa a flag de overflow
   77:	  0040	11 5C		            acall   ConfigT0
   78:
   79:	  0042	32		            reti                    ; retorna da ISR
   80:
   81:				; -----------------------------------------------------------------------------
   82:				; Timer 1
   83:				; -----------------------------------------------------------------------------
   84:				; Contador de segundos.
   85:				; - Registradores: r5
   86:				; -----------------------------------------------------------------------------
   87:	  0043	0D		_tmr1:      inc     r5               ; incrementa r5
   88:	  0044	BD 14 04	            cjne    r5, #20, _exit3  ; se ocorreu overflow, um segundo se passou
   89:
   90:	  0047	11 B9		_sec:       acall   Second          ; chama rotina de segundo
   91:	  0049	7D 00		            mov     r5, #00       ; recarrega r5
   92:
   93:	  004B	C2 8F		_exit3:     clr     tf1
   94:	  004D	11 63		            acall   ConfigT1
   95:	  004F	32		            reti
   96:
   97:				; *****************************************************************************
   98:				; SUB-ROTINAS
   99:				; *****************************************************************************

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:
  101:				; -----------------------------------------------------------------------------
  102:				; ConfTMR
  103:				; -----------------------------------------------------------------------------
  104:				; Configura os Timers 0 e 1
  105:				; - Usa: ConfigT0
  106:				;        ConfigT1
  107:				; -----------------------------------------------------------------------------
  108:	  0050			ConfTMR:
  109:	  0050	75 89 11	            mov     tmod, #11h  ; timer 0 e 1 no modo 1
  110:	  0053	D2 8C		            setb    tr0         ; liga timer 0
  111:	  0055	D2 8E		            setb    tr1         ; liga timer 1
  112:
  113:	  0057	11 5C		            acall   ConfigT0    ; configura timer 0
  114:	  0059	11 63		            acall   ConfigT1    ; configura timer 1
  115:
  116:	  005B	22		            ret
  117:				; -----------------------------------------------------------------------------
  118:				; ConfigT0
  119:				; -----------------------------------------------------------------------------
  120:				; Configura o timer 0
  121:				; -----------------------------------------------------------------------------
  122:	  005C	75 8A 78	ConfigT0:   mov     tl0, #low TMR ; recarga do byte menor
  123:	  005F	75 8C EC	            mov     th0, #high TMR; recarga do byte maior
  124:
  125:	  0062	22		            ret
  126:
  127:				; -----------------------------------------------------------------------------
  128:				; ConfigT1
  129:				; -----------------------------------------------------------------------------
  130:				; Configura o timer 1
  131:				; -----------------------------------------------------------------------------
  132:	  0063	75 8B B0	ConfigT1:   mov     tl1, #low TMR1  ; recarga do byte menor
  133:	  0066	75 8D 3C	            mov     th1, #high TMR1 ; recarga do byte maior
  134:
  135:	  0069	22		            ret
  136:
  137:				; -----------------------------------------------------------------------------
  138:				; MuxMin
  139:				; -----------------------------------------------------------------------------
  140:				; Multiplexa dois displays (D1 e D2), imprimindo o valor do R3 (Minutos).
  141:				; - Registradores: R3
  142:				; - Usa: Display
  143:				; -----------------------------------------------------------------------------
  144:	  006A	B2 D5		MuxMin:     cpl     f0          ; complementa flag de controle
  145:	  006C	11 B0		            acall   Disable
  146:
  147:	  006E	EB		            mov     a, r3       ; a <- r3
  148:	  006F	75 F0 0A	            mov     b, #10      ; prepara para separar unidade e dezena
  149:	  0072	84		            div     ab          ; a <- dezenas | b <- unidade
  150:
  151:	  0073	20 D5 08	            jb      f0, _disp1  ; f0 == 1?
  152:	  0076	D2 B5		            setb    D2          ; nao: Habilita d2
  153:	  0078	E5 F0		            mov     a, b        ; acc <- b para botar no display
  154:	  007A	11 AB		            acall   Display     ; imprime o valor do acc
  155:	  007C	01 82		            ajmp    _exit       ; sai da rotina

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:
  157:	  007E	D2 B4		_disp1:     setb    D1          ; habilita d1
  158:	  0080	11 AB		            acall   Display     ; imprime o valor do acc
  159:
  160:	  0082	22		_exit:      ret
  161:
  162:				; -----------------------------------------------------------------------------
  163:				; MuxSec
  164:				; -----------------------------------------------------------------------------
  165:				; Multiplexa dois displays (D3 e D4), impimindo o valor do R4 (segundos).
  166:				; - Registradores: R4
  167:				; - Usa: Display
  168:				; -----------------------------------------------------------------------------
  169:	  0083	B2 00		MuxSec:     cpl     F1          ; complementa flag de controle
  170:	  0085	11 B0		            acall   Disable
  171:
  172:	  0087	EC		            mov     a, r4       ; a <- r4
  173:	  0088	75 F0 0A	            mov     b, #10      ; prepara para separar unidade e dezena
  174:	  008B	84		            div     ab          ; a <- dezena | b <- unidade
  175:
  176:	  008C	20 00 08	            jb      F1, _disp3  ; F1 == 1?
  177:	  008F	D2 B7		            setb    D4          ; nao: habilita d4
  178:	  0091	E5 F0		            mov     a, b        ; acc <- b para botar no display
  179:	  0093	11 AB		            acall   Display     ; imprime o valor do acc
  180:	  0095	01 9B		            ajmp    _exit1      ; sai da rotina
  181:
  182:	  0097	D2 B6		_disp3:     setb    D3          ; habilita d3
  183:	  0099	11 AB		            acall   Display     ; imprime o valor do acc
  184:
  185:	  009B	22		_exit1:     ret
  186:
  187:				; -----------------------------------------------------------------------------
  188:				; LKDisp
  189:				; -----------------------------------------------------------------------------
  190:				; Decodifica o digito do ACC para o display de 7 segmentos. Retorna com
  191:				; o valor no ACC.
  192:				; -----------------------------------------------------------------------------
  193:	  009C	90 00 A1	LKDisp:     mov     dptr, #TABELA
  194:	  009F	93		            movc    a, @a+dptr
  195:	  00A0	22		            ret
  196:
  197:	  00A1	C0 F9 A4 B0	TABELA: db  0C0h,0F9h,0A4h,0B0h,99h,92h,82h,0F8h,80h,90h
	  00A5	99 92 82 F8
	  00A9	80 90
  198:
  199:				; -----------------------------------------------------------------------------
  200:				; Display
  201:				; -----------------------------------------------------------------------------
  202:				; Imprime num display o digito no acumulador.
  203:				; - Usa: LKDisp
  204:				; -----------------------------------------------------------------------------
  205:	  00AB	11 9C		Display:    acall   LKDisp
  206:	  00AD	F5 A0		            mov     DISP, a
  207:	  00AF	22		            ret
  208:
  209:				; -----------------------------------------------------------------------------

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  210:				; Disable
  211:				; -----------------------------------------------------------------------------
  212:				; Desabilita todos os displays
  213:				; -----------------------------------------------------------------------------
  214:	  00B0	C2 B4		Disable:    clr    D1
  215:	  00B2	C2 B5		            clr    D2
  216:	  00B4	C2 B6		            clr    D3
  217:	  00B6	C2 B7		            clr    D4
  218:
  219:	  00B8	22		            ret
  220:
  221:				; -----------------------------------------------------------------------------
  222:				; Second
  223:				; -----------------------------------------------------------------------------
  224:				; Chamada a cada um segundo
  225:				; -----------------------------------------------------------------------------
  226:	  00B9	1C		Second:     dec     r4
  227:	  00BA	BC FF 10	            cjne    r4, #0FFh, _exit4   ; ocorreu underflow?
  228:
  229:	  00BD	1B		            dec     r3                  ; sim: decrementa os minutos
  230:
  231:	  00BE	BB FF 0A	            cjne    r3, #0FFh, _label   ; ocorreu underflow nos minutos?
  232:
  233:	  00C1	C2 8E		            clr     tr1                 ; sim: para o timer 1
  234:	  00C3	7B 00		            mov     r3, #0              ; zera os minutos
  235:	  00C5	7C 00		            mov     r4, #0              ; zera os segundos
  236:	  00C7	11 CE		            acall   Break               ; Timer finalizado.
  237:	  00C9	01 CD		            ajmp    _exit4              ; sai da rotina
  238:
  239:	  00CB	7C 3B		_label:     mov     r4, #59
  240:	  00CD	22		_exit4:     ret
  241:
  242:				; -----------------------------------------------------------------------------
  243:				; Break
  244:				; -----------------------------------------------------------------------------
  245:				; Rotina a ser chamada quando a contagem finaliza.
  246:				; -----------------------------------------------------------------------------
  247:	  00CE	B2 80		Break:      cpl     LOAD    ; aciona a carga
  248:	  00D0	22		            ret
  249:
  250:				; *****************************************************************************
  251:				            end
  252:				; *****************************************************************************





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
BREAK				  CODE	    00CE	 247
CONFIGT0			  CODE	    005C	 122
CONFIGT1			  CODE	    0063	 132
CONFTMR				  CODE	    0050	 108
CY				  BIT	      D7
D1				  NUMBER    00B4	  27
D2				  NUMBER    00B5	  28
D3				  NUMBER    00B6	  29
D4				  NUMBER    00B7	  30
DISABLE				  CODE	    00B0	 214
DISP				  NUMBER    00A0	  24
DISPLAY				  CODE	    00AB	 205
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
F1				  BIT	      00	  36
F2				  BIT	      01	  37
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LKDISP				  CODE	    009C	 193
LOAD				  NUMBER    0080	  25
MUXMIN				  CODE	    006A	 144
MUXSEC				  CODE	    0083	 169
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PS				  BIT	      BC

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SECOND				  CODE	    00B9	 226
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TABELA				  CODE	    00A1	 197
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TMR				  NUMBER    EC78	  33
TMR1				  NUMBER    3CB0	  34
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
_DISP1				  CODE	    007E	 157
_DISP3				  CODE	    0097	 182
_EXIT				  CODE	    0082	 160
_EXIT1				  CODE	    009B	 185
_EXIT2				  CODE	    003E	  76
_EXIT3				  CODE	    004B	  93
_EXIT4				  CODE	    00CD	 240
_LABEL				  CODE	    00CB	 239
_MAIN				  CODE	    001E	  42
_MIN				  CODE	    003C	  74
_SEC				  CODE	    0047	  90
_TMR0				  CODE	    0033	  68
_TMR1				  CODE	    0043	  87
